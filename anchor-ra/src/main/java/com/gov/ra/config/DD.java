package com.gov.ra.config;


import java.util.regex.Pattern;

public class DD {
    // 修复后的正则表达式
   private static final Pattern MESSAGE_PATTERN = Pattern.compile(
        "^((25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)@" +
                "(\\d+-\\d+-\\d+,[A-D],-?(\\d{1,3}|999)(\\.\\d+)?(;\\d+-\\d+-\\d+,[A-D],-?(\\d{1,3}|999)(\\.\\d+)?)*;?)$");
;

    /**
     * 校验传感器数据格式是否合法
     *
     * @param data 传感器数据
     * @return 是否合法
     */
    public static boolean validateSensorData(String data) {
        return MESSAGE_PATTERN.matcher(data).matches();
    }

    public static void main(String[] args) {
        String str = "192.168.2.200@01-1-1,A,-999;01-1-2,A,-999;";
        String str1 = "192.168.2.202@01-1-1,A,28.96;01-1-2,A,28.61;01-1-3,A,30.06;01-1-4,A,29.19;01-1-5,A,28.96;01-1-6,A,29.48;01-1-7,A,29.65;01-1-8,A,28.96;01-1-9,A,29.71;01-2-1,A,28.84;01-2-2,A,29.77;01-2-3,A,29.36;01-2-4,A,29.88;01-2-5,A,28.43;01-2-6,A,28.84;01-2-7,A,28.55;01-2-8,A,29.25;01-2-9,A,28.67;01-3-1,C,-999;01-3-2,C,-999;01-3-3,C,-999;01-3-4,C,-999;01-3-5,C,-999;01-3-6,C,-999;01-3-7,C,-999;01-3-8,C,-999;01-3-9,C,-999;01-4-1,C,-999;01-4-2,C,-999;01-4-3,C,-999;01-4-4,C,-999;01-4-5,C,-999;01-4-6,C,-999;01-4-7,C,-999;01-4-8,C,-999;01-4-9,C,-999;01-5-1,C,4.26;01-5-2,C,3.46;01-5-3,C,-2.67;01-5-4,C,1.50;01-5-5,C,3.09;01-5-6,C,-0.99;01-5-7,C,-2.14;01-5-8,C,0.85;01-5-9,C,3.82;01-6-1,C,8.15;01-6-2,C,1.53;01-6-3,C,-2.37;01-6-4,C,2.24;01-6-5,C,2.05;01-6-6,C,1.09;01-6-7,C,-8.38;01-6-8,C,-3.16;01-6-9,C,-3.16;01-7-1,C,5.47;01-7-2,C,-2.14;01-7-3,C,0.18;01-7-4,C,-3.73;01-7-5,C,8.65;01-7-6,C,2.46;01-7-7,C,0.79;01-7-8,C,-3.85;01-7-9,C,1.55;";

        System.out.println(str.substring(str.indexOf("@")));
    }
}